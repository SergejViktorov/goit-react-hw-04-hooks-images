{"version":3,"sources":["Components/ImageGalleryItem/imageGalleryItem.module.css","Components/Modal/modal.module.css","app.module.css","Components/ImageGallery/imageGallery.module.css","Components/Button/button.module.css","Components/Searchbar/searchbar.module.css","services/pixabay-api.js","Components/Searchbar/Searchbar.js","Components/ImageGalleryItem/ImageGalleryItem.js","Components/ImageGallery/ImageGallery.js","Components/Modal/Modal.js","Components/Button/Button.js","Components/Loader/Loader.js","App.js","index.js"],"names":["module","exports","axios","defaults","baseURL","params","key","image_type","orientation","per_page","fetchImage","query","page","get","q","catch","error","response","toast","data","status","headers","request","message","config","console","log","Searchbar","onSubmit","useState","setQuery","resetForm","className","s","SearchForm","e","preventDefault","trim","type","SearchFormButton","SearchFormButtonLabel","SearchFormInput","autocomplete","autofocus","placeholder","value","onChange","currentTarget","toLowerCase","name","ImageGalleryItem","id","webformatURL","openModal","largeImageURL","src","alt","ImageGalleryItemImage","onClick","propTepes","PropTypes","number","isRequired","string","func","tags","ImageGallery","image","map","Modal","onClose","children","useEffect","handleKeyPress","code","window","addEventListener","removeEventListener","Overlay","target","Button","CustomLoader","color","height","width","timeout","alignSelf","justifyContent","alignItems","App","images","setImages","searchName","setSearchName","errors","setErrors","loading","setLoading","currentPage","setCurrentPage","showModal","setShowModal","modalImgProps","setModalImgProps","isFerstRenfer","useRef","a","api","img","prevState","hits","length","scrollTo","top","document","documentElement","scrollHeight","behavior","current","fetchImg","toggleModal","see","content","newContent","position","autoClose","ModalImg","ReactDOM","render","StrictMode","getElementById"],"mappings":"wIACAA,EAAOC,QAAU,CAAC,iBAAmB,2CAA2C,sBAAwB,kD,mBCAxGD,EAAOC,QAAU,CAAC,QAAU,uBAAuB,MAAQ,uB,mBCA3DD,EAAOC,QAAU,CAAC,IAAM,iBAAiB,SAAW,wB,mBCApDD,EAAOC,QAAU,CAAC,aAAe,qC,mBCAjCD,EAAOC,QAAU,CAAC,OAAS,yB,kBCA3BD,EAAOC,QAAU,CAAC,UAAY,6BAA6B,WAAa,8BAA8B,iBAAmB,oCAAoC,sBAAwB,yCAAyC,gBAAkB,qC,iMCEhPC,IAAMC,SAASC,QAAU,2BACzBF,IAAMC,SAASE,OAAS,CACvBC,IAAK,qCACLC,WAAY,QACZC,YAAa,aACbC,SAAU,IAEJ,IAuBQC,EAvBW,WAA2B,IAA1BC,EAAyB,uDAAjB,GAAIC,EAAa,uDAAN,EAC7C,OAAOV,IACLW,IAAI,GAAI,CACRR,OAAQ,CACPS,EAAGH,EACHC,UAGDG,OAAM,SAAUC,GAWhB,OAVIA,EAAMC,UACTC,IAAMF,MAAMA,EAAMC,SAASE,MAC3BD,IAAMF,MAAMA,EAAMC,SAASG,QAC3BF,IAAMF,MAAMA,EAAMC,SAASI,UACjBL,EAAMM,QAChBJ,IAAMF,MAAMA,EAAMM,SAElBJ,IAAMF,MAAM,QAASA,EAAMO,SAE5BL,IAAMF,MAAM,QAASA,EAAMQ,QACpBC,QAAQC,IAAIV,EAAMQ,Y,uBCxBb,SAASG,EAAT,GAAkC,IAAbC,EAAY,EAAZA,SACnC,EAA0BC,mBAAS,IAAnC,mBAAOlB,EAAP,KAAcmB,EAAd,KAgBMC,EAAY,WACjBD,EAAS,KAGV,OACC,wBAAQE,UAAWC,IAAEN,UAArB,SACC,uBAAMK,UAAWC,IAAEC,WAAYN,SAhBZ,SAACO,GACrBA,EAAEC,iBACmB,KAAjBzB,EAAM0B,QAIVT,EAASjB,GACToB,KAJCb,IAAMF,MAAM,oHAaZ,UACC,wBAAQsB,KAAK,SAASN,UAAWC,IAAEM,iBAAnC,SACC,sBAAMP,UAAWC,IAAEO,sBAAnB,sBAGD,uBACCR,UAAWC,IAAEQ,gBACbH,KAAK,OACLI,aAAa,MACbC,WAAS,EACTC,YAAY,2BACZC,MAAOlC,EACPmC,SAhCsB,SAACX,GAC1BL,EAASK,EAAEY,cAAcF,MAAMG,gBAgC5BC,KAAK,e,qCCrCJC,EAAmB,SAAC,GAAoD,IAAlDC,EAAiD,EAAjDA,GAAIC,EAA6C,EAA7CA,aAAcC,EAA+B,EAA/BA,UAAWC,EAAoB,EAApBA,cACxD,OACC,oBAAItB,UAAWC,IAAEiB,iBAAjB,SACC,qBACCK,IAAKH,EACLI,IAAI,GACJxB,UAAWC,IAAEwB,sBACbC,QAAS,kBAAML,EAAUC,OALaH,IAU1CD,EAAiBS,UAAY,CAC5BR,GAAIS,IAAUC,OAAOC,WACrBV,aAAcQ,IAAUG,OAAOD,WAC/BT,UAAWO,IAAUI,KAAKF,WAC1BR,cAAeM,IAAUG,OAAOD,WAChCG,KAAML,IAAUG,OAAOD,YAGTZ,Q,iBCIAgB,EAvBM,SAAC,GAA0B,IAAxBC,EAAuB,EAAvBA,MAAOd,EAAgB,EAAhBA,UAC9B,OACC,oBAAIrB,UAAWC,IAAEiC,aAAjB,SACEC,EAAMC,KAAI,YAAgD,IAA7CjB,EAA4C,EAA5CA,GAAIC,EAAwC,EAAxCA,aAAcE,EAA0B,EAA1BA,cAAeW,EAAW,EAAXA,KAC9C,OACC,cAAC,EAAD,CACCd,GAAIA,EACJC,aAAcA,EACdE,cAAeA,EACfW,KAAMA,EACNZ,UAAWA,U,iBCXF,SAASgB,EAAT,GAAuC,IAAtBC,EAAqB,EAArBA,QAASC,EAAY,EAAZA,SACxCC,qBAAU,WACT,IAAMC,EAAiB,SAACtC,GACR,WAAXA,EAAEuC,MACLJ,KAIF,OADAK,OAAOC,iBAAiB,UAAWH,GAC5B,WACNE,OAAOE,oBAAoB,UAAWJ,MAErC,CAACH,IAQJ,OACC,qBAAKtC,UAAWC,IAAE6C,QAASpB,QAPA,SAACvB,GACxBA,EAAEY,gBAAkBZ,EAAE4C,QACzBT,KAKD,SACC,qBAAKtC,UAAWC,IAAEoC,MAAlB,SAA0BE,M,qBCTdS,EAZA,SAAC,GAAiB,IAAftB,EAAc,EAAdA,QACjB,OACC,wBAAQpB,KAAK,SAASN,UAAWC,IAAE+C,OAAQtB,QAASA,EAApD,4B,iBCYauB,EAfM,WACpB,OACC,cAAC,IAAD,CACC3C,KAAK,YACL4C,MAAM,UACNC,OAAQ,IACRC,MAAO,IACPC,QAAS,IACTC,UAAU,SACVC,eAAe,SACfC,WAAW,YCAC,SAASC,EAAT,GAAgC,EAAjBnC,cAAkB,IAC/C,EAA4BzB,mBAAS,IAArC,mBAAO6D,EAAP,KAAeC,EAAf,KACA,EAAoC9D,mBAAS,IAA7C,mBAAO+D,EAAP,KAAmBC,EAAnB,KACA,EAA4BhE,mBAAS,MAArC,mBAAOiE,EAAP,KAAeC,EAAf,KACA,EAA8BlE,oBAAS,GAAvC,mBAAOmE,EAAP,KAAgBC,EAAhB,KACA,EAAsCpE,mBAAS,GAA/C,mBAAOqE,EAAP,KAAoBC,EAApB,KACA,EAAkCtE,oBAAS,GAA3C,mBAAOuE,EAAP,KAAkBC,EAAlB,KACA,EAA0CxE,mBAAS,IAAnD,mBAAOyE,EAAP,KAAsBC,EAAtB,KAEMC,EAAgBC,kBAAO,GAW7BjC,qBAAU,WAAM,4CAKf,4BAAAkC,EAAA,sEAEET,GAAW,GACXJ,EAAcD,GAHhB,SAIoBe,EAAIf,EAAYM,GAJpC,OAIQU,EAJR,OAKEjB,GAAU,SAACkB,GAAD,4BAAmBA,GAAnB,YAAiCD,EAAIzF,KAAK2F,UACpDb,GAAW,GACPP,EAAOqB,OAAS,GACnBpC,OAAOqC,SAAS,CACfC,IAAKC,SAASC,gBAAgBC,aAC9BC,SAAU,WAVd,kDAcEtB,EAAU,KAAM9E,SAASG,QACzB6E,GAAW,GAfb,2DALe,sBACXO,EAAcc,QACjBd,EAAcc,SAAU,EAFV,mCAuBfC,KACE,CAAC3B,EAAYM,IAEhB,IAIMsB,EAAc,WACnBnB,GAAa,SAACD,GAAD,OAAgBA,MASxBqB,EAAM/B,EAAOqB,OAEbW,EAAU5B,EACf,2FAAiBA,KAEjB,mCACC,cAAC,EAAD,CAAc3B,MAAOuB,EAAQrC,UAZR,SAACC,GACvBiD,EAAiBjD,GACjBkE,IACA/F,QAAQC,IAAI4B,QAaPqE,EACU,KAAf/B,EAAoB,oEAA6C8B,EAElE,OACC,mCACC,gCACC,cAAC/F,EAAD,CAAWC,SAjEW,SAACjB,GACrBiF,IAAejF,IAClBkF,EAAclF,GACdwF,EAAe,GACfR,EAAU,IACVI,EAAU,UA6DT,cAAC,IAAD,CAAgB6B,SAAS,YAAYC,UAAW,MAE/CF,EACA3B,GAAW,cAAC,EAAD,IAEXyB,EAAM,GAAK,cAAC,EAAD,CAAQ/D,QApCN,WAChByC,GAAe,SAACU,GAAD,OAAeA,EAAY,QAoCvCT,GACA,cAAC/B,EAAD,CAAOC,QAASkD,EAAhB,SACC,qBAAKjE,IAAK+C,EAAe9C,IAAI,GAAGxB,UAAWC,IAAE6F,kB,MC7FnDC,IAASC,OACR,cAAC,IAAMC,WAAP,UACC,cAACxC,EAAD,MAEDyB,SAASgB,eAAe,W","file":"static/js/main.83984205.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGalleryItem\":\"imageGalleryItem_ImageGalleryItem__ZQUNX\",\"ImageGalleryItemImage\":\"imageGalleryItem_ImageGalleryItemImage__J3VTm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Overlay\":\"modal_Overlay__1wIXH\",\"Modal\":\"modal_Modal__3D_ma\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"app_App__202UE\",\"ModalImg\":\"app_ModalImg__2Jom5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGallery\":\"imageGallery_ImageGallery__opeM4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"button_Button__tKafM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Searchbar\":\"searchbar_Searchbar__rG-mP\",\"SearchForm\":\"searchbar_SearchForm__3y4kO\",\"SearchFormButton\":\"searchbar_SearchFormButton__PVbcm\",\"SearchFormButtonLabel\":\"searchbar_SearchFormButtonLabel__3ijKF\",\"SearchFormInput\":\"searchbar_SearchFormInput__1wp4S\"};","import axios from 'axios'\r\nimport { toast } from 'react-toastify'\r\n\r\naxios.defaults.baseURL = 'https://pixabay.com/api/'\r\naxios.defaults.params = {\r\n\tkey: '21922631-b9054864096d193e79c9fc0a3',\r\n\timage_type: 'photo',\r\n\torientation: 'horizontal',\r\n\tper_page: 12,\r\n}\r\nexport const fetchImage = (query = '', page = 1) => {\r\n\treturn axios\r\n\t\t.get('', {\r\n\t\t\tparams: {\r\n\t\t\t\tq: query,\r\n\t\t\t\tpage,\r\n\t\t\t},\r\n\t\t})\r\n\t\t.catch(function (error) {\r\n\t\t\tif (error.response) {\r\n\t\t\t\ttoast.error(error.response.data)\r\n\t\t\t\ttoast.error(error.response.status)\r\n\t\t\t\ttoast.error(error.response.headers)\r\n\t\t\t} else if (error.request) {\r\n\t\t\t\ttoast.error(error.request)\r\n\t\t\t} else {\r\n\t\t\t\ttoast.error('Error', error.message)\r\n\t\t\t}\r\n\t\t\ttoast.error('Error', error.config)\r\n\t\t\treturn console.log(error.config)\r\n\t\t})\r\n}\r\n\r\nexport default fetchImage\r\n","import { useState } from 'react'\r\nimport { toast } from 'react-toastify'\r\nimport s from './searchbar.module.css'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport default function Searchbar({ onSubmit }) {\r\n\tconst [query, setQuery] = useState('')\r\n\r\n\tconst handleSearchInput = (e) => {\r\n\t\tsetQuery(e.currentTarget.value.toLowerCase())\r\n\t}\r\n\r\n\tconst handleSubmit = (e) => {\r\n\t\te.preventDefault()\r\n\t\tif (query.trim() === '') {\r\n\t\t\ttoast.error('Неккоректный запрос !')\r\n\t\t\treturn\r\n\t\t}\r\n\t\tonSubmit(query)\r\n\t\tresetForm()\r\n\t}\r\n\r\n\tconst resetForm = () => {\r\n\t\tsetQuery('')\r\n\t}\r\n\r\n\treturn (\r\n\t\t<header className={s.Searchbar}>\r\n\t\t\t<form className={s.SearchForm} onSubmit={handleSubmit}>\r\n\t\t\t\t<button type=\"submit\" className={s.SearchFormButton}>\r\n\t\t\t\t\t<span className={s.SearchFormButtonLabel}>Search</span>\r\n\t\t\t\t</button>\r\n\r\n\t\t\t\t<input\r\n\t\t\t\t\tclassName={s.SearchFormInput}\r\n\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\tautocomplete=\"off\"\r\n\t\t\t\t\tautofocus\r\n\t\t\t\t\tplaceholder=\"Search images and photos\"\r\n\t\t\t\t\tvalue={query}\r\n\t\t\t\t\tonChange={handleSearchInput}\r\n\t\t\t\t\tname=\"query\"\r\n\t\t\t\t/>\r\n\t\t\t</form>\r\n\t\t</header>\r\n\t)\r\n}\r\n\r\nSearchbar.propTypes = {\r\n\tonSubmit: PropTypes.func.isRequired,\r\n}\r\n","import React from 'react'\r\nimport s from './imageGalleryItem.module.css'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst ImageGalleryItem = ({ id, webformatURL, openModal, largeImageURL }) => {\r\n\treturn (\r\n\t\t<li className={s.ImageGalleryItem} key={id}>\r\n\t\t\t<img\r\n\t\t\t\tsrc={webformatURL}\r\n\t\t\t\talt=\"\"\r\n\t\t\t\tclassName={s.ImageGalleryItemImage}\r\n\t\t\t\tonClick={() => openModal(largeImageURL)}\r\n\t\t\t/>\r\n\t\t</li>\r\n\t)\r\n}\r\nImageGalleryItem.propTepes = {\r\n\tid: PropTypes.number.isRequired,\r\n\twebformatURL: PropTypes.string.isRequired,\r\n\topenModal: PropTypes.func.isRequired,\r\n\tlargeImageURL: PropTypes.string.isRequired,\r\n\ttags: PropTypes.string.isRequired,\r\n}\r\n\r\nexport default ImageGalleryItem\r\n","import React from 'react'\r\nimport ImageGalleryItem from '../ImageGalleryItem'\r\nimport s from './imageGallery.module.css'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst ImageGallery = ({ image, openModal }) => {\r\n\treturn (\r\n\t\t<ul className={s.ImageGallery}>\r\n\t\t\t{image.map(({ id, webformatURL, largeImageURL, tags }) => {\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<ImageGalleryItem\r\n\t\t\t\t\t\tid={id}\r\n\t\t\t\t\t\twebformatURL={webformatURL}\r\n\t\t\t\t\t\tlargeImageURL={largeImageURL}\r\n\t\t\t\t\t\ttags={tags}\r\n\t\t\t\t\t\topenModal={openModal}\r\n\t\t\t\t\t/>\r\n\t\t\t\t)\r\n\t\t\t})}\r\n\t\t</ul>\r\n\t)\r\n}\r\n\r\nImageGallery.propTypes = {\r\n\timage: PropTypes.array.isRequired,\r\n\topenModal: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default ImageGallery\r\n","import { useEffect } from 'react'\r\nimport s from './modal.module.css'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport default function Modal({ onClose, children }) {\r\n\tuseEffect(() => {\r\n\t\tconst handleKeyPress = (e) => {\r\n\t\t\tif (e.code === 'Escape') {\r\n\t\t\t\tonClose()\r\n\t\t\t}\r\n\t\t}\r\n\t\twindow.addEventListener('keydown', handleKeyPress)\r\n\t\treturn () => {\r\n\t\t\twindow.removeEventListener('keydown', handleKeyPress)\r\n\t\t}\r\n\t}, [onClose])\r\n\r\n\tconst handleBackdropClick = (e) => {\r\n\t\tif (e.currentTarget === e.target) {\r\n\t\t\tonClose()\r\n\t\t}\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className={s.Overlay} onClick={handleBackdropClick}>\r\n\t\t\t<div className={s.Modal}>{children}</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nModal.propTypes = {\r\n\tonClose: PropTypes.func.isRequired,\r\n}\r\n","import React from 'react'\r\nimport s from './button.module.css'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst Button = ({ onClick }) => {\r\n\treturn (\r\n\t\t<button type=\"button\" className={s.Button} onClick={onClick}>\r\n\t\t\tLoad more ...\r\n\t\t</button>\r\n\t)\r\n}\r\n\r\nButton.propTypes = {\r\n\tonClick: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default Button\r\n","import React from 'react'\r\nimport Loader from 'react-loader-spinner'\r\n\r\nconst CustomLoader = () => {\r\n\treturn (\r\n\t\t<Loader\r\n\t\t\ttype=\"ThreeDots\"\r\n\t\t\tcolor=\"#00BFFF\"\r\n\t\t\theight={100}\r\n\t\t\twidth={100}\r\n\t\t\ttimeout={30000} //3 secs\r\n\t\t\talignSelf=\"center\"\r\n\t\t\tjustifyContent=\"center\"\r\n\t\t\talignItems=\"center\"\r\n\t\t/>\r\n\t)\r\n}\r\n\r\nexport default CustomLoader\r\n","import { useState, useEffect, useRef } from 'react'\nimport 'modern-normalize'\nimport s from './app.module.css'\nimport { ToastContainer } from 'react-toastify'\nimport 'react-toastify/dist/ReactToastify.css'\nimport api from './services/pixabay-api'\n\nimport Searchbar from './Components/Searchbar'\nimport ImageGallery from './Components/ImageGallery/ImageGallery'\nimport Modal from './Components/Modal'\nimport Button from './Components/Button'\nimport CustomLoader from './Components/Loader'\n\nexport default function App({ largeImageURL }) {\n\tconst [images, setImages] = useState([])\n\tconst [searchName, setSearchName] = useState('')\n\tconst [errors, setErrors] = useState(null)\n\tconst [loading, setLoading] = useState(false)\n\tconst [currentPage, setCurrentPage] = useState(1)\n\tconst [showModal, setShowModal] = useState(false)\n\tconst [modalImgProps, setModalImgProps] = useState('')\n\n\tconst isFerstRenfer = useRef(true)\n\n\tconst hendleFormSubmit = (query) => {\n\t\tif (searchName !== query) {\n\t\t\tsetSearchName(query)\n\t\t\tsetCurrentPage(1)\n\t\t\tsetImages([])\n\t\t\tsetErrors(null)\n\t\t}\n\t}\n\n\tuseEffect(() => {\n\t\tif (isFerstRenfer.current) {\n\t\t\tisFerstRenfer.current = false\n\t\t\treturn\n\t\t}\n\t\tasync function fetchImg() {\n\t\t\ttry {\n\t\t\t\tsetLoading(true)\n\t\t\t\tsetSearchName(searchName)\n\t\t\t\tconst img = await api(searchName, currentPage)\n\t\t\t\tsetImages((prevState) => [...prevState, ...img.data.hits])\n\t\t\t\tsetLoading(false)\n\t\t\t\tif (images.length > 0) {\n\t\t\t\t\twindow.scrollTo({\n\t\t\t\t\t\ttop: document.documentElement.scrollHeight,\n\t\t\t\t\t\tbehavior: 'smooth',\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t} catch (error) {\n\t\t\t\tsetErrors(error.response.status)\n\t\t\t\tsetLoading(false)\n\t\t\t}\n\t\t}\n\t\tfetchImg()\n\t}, [searchName, currentPage])\n\n\tconst nextPage = () => {\n\t\tsetCurrentPage((prevState) => prevState + 1)\n\t}\n\n\tconst toggleModal = () => {\n\t\tsetShowModal((showModal) => !showModal)\n\t}\n\n\tconst handleImgClick = (largeImageURL) => {\n\t\tsetModalImgProps(largeImageURL)\n\t\ttoggleModal()\n\t\tconsole.log(largeImageURL)\n\t}\n\n\tconst see = images.length\n\n\tconst content = errors ? (\n\t\t<h2>Упс, ошибка {errors}</h2>\n\t) : (\n\t\t<>\n\t\t\t<ImageGallery image={images} openModal={handleImgClick} />\n\t\t</>\n\t)\n\n\tconst newContent =\n\t\tsearchName === '' ? <p>Enter what picture you want to find</p> : content\n\n\treturn (\n\t\t<>\n\t\t\t<div>\n\t\t\t\t<Searchbar onSubmit={hendleFormSubmit} />\n\t\t\t\t<ToastContainer position=\"top-right\" autoClose={4000} />\n\n\t\t\t\t{newContent}\n\t\t\t\t{loading && <CustomLoader />}\n\n\t\t\t\t{see > 0 && <Button onClick={nextPage} />}\n\t\t\t\t{showModal && (\n\t\t\t\t\t<Modal onClose={toggleModal}>\n\t\t\t\t\t\t<img src={modalImgProps} alt=\"\" className={s.ModalImg} />\n\t\t\t\t\t</Modal>\n\t\t\t\t)}\n\t\t\t</div>\n\t\t</>\n\t)\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n)\n"],"sourceRoot":""}